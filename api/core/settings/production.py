import logging

import sentry_sdk
from sentry_sdk.integrations.django import DjangoIntegration
from sentry_sdk.integrations.logging import LoggingIntegration
from sentry_sdk.integrations.redis import RedisIntegration

from .base import *  # noqa
from .email import *  # noqa


WSGI_APPLICATION = 'core.wsgi.application'

# Sentry settings
# ------------------------------------------------------------------------------
"""
SENTRY_DSN = env("SENTRY_DSN")
SENTRY_LOG_LEVEL = env.int("DJANGO_SENTRY_LOG_LEVEL", logging.INFO)

sentry_logging = LoggingIntegration(
    level=SENTRY_LOG_LEVEL,  # Capture info and above as breadcrumbs
    event_level=logging.ERROR,  # Send errors as events
)
integrations = [
    sentry_logging,
    DjangoIntegration(),
    RedisIntegration(),
]
sentry_sdk.init(
    dsn=SENTRY_DSN,
    integrations=integrations,
    environment=env('SENTRY_ENVIRONMENT', default='production'),
    traces_sample_rate=env.float('SENTRY_TRACES_SAMPLE_RATE', default=0.0),
    send_default_pii=True
)
"""
# SECRET_KEY must be generated by the command before the deploy:
# $./generate_secret_key.sh
with open(ROOT_DIR.path('secretkey.txt')) as f:
    SECRET_KEY = f.read().strip()

DEBUG = False

ROOT_URLCONF = 'api.urls'

ALLOWED_HOSTS = [
    '127.0.0.1', 'manydates.ml', 'web',
]
